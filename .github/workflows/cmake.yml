name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: create tmp dir
      run: mkdir tmp

    - name: update
      run: |
        sudo apt update
        sudo apt upgrade -y

    - name: install cxxopts
      run: |
        git clone https://github.com/jarro2783/cxxopts.git tmp/cxxopts
        cd tmp/cxxopts
        git checkout $(git tag | grep -P '^v\d+\.\d+\.\d+$' | sort | tail -1)
        cmake -B build . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build build
        sudo cmake --install build
        cd -

    - name: install nlohmann-json
      run: |
        git clone https://github.com/nlohmann/json.git tmp/json
        cd tmp/json
        git checkout $(git tag | grep -P '^v\d+\.\d+\.\d+$' | sort | tail -1)
        cmake -B build . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        sudo cmake --install build
        cd -

    - name: install cxxshm
      run: |
        git clone https://github.com/NikolasK-source/cxxshm.git tmp/cxxshm
        cd tmp/cxxshm
        git checkout $(git tag | grep -P '^v\d+\.\d+\.\d+$' | sort | tail -1)
        cmake -B build . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCLANG_FORMAT=OFF -DCOMPILER_WARNINGS=OFF -DCLANG_TIDY=OFF
        cmake --build build
        sudo cmake --install build
        cd -

    - name: install cxxsemaphore
      run: |
        git clone https://github.com/NikolasK-source/cxxsemaphore.git tmp/cxxsemaphore
        cd tmp/cxxsemaphore
        git checkout $(git tag | grep -P '^v\d+\.\d+\.\d+$' | sort | tail -1)
        cmake -B build . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCLANG_FORMAT=OFF -DCOMPILER_WARNINGS=OFF -DCLANG_TIDY=OFF
        cmake --build build
        sudo cmake --install build
        cd -

    - name: install cxxitimer
      run: |
        git clone https://github.com/NikolasK-source/cxxitimer.git tmp/cxxitimer
        cd tmp/cxxitimer
        git checkout $(git tag | grep -P '^v\d+\.\d+\.\d+$' | sort | tail -1)
        cmake -B build . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCLANG_FORMAT=OFF -DCOMPILER_WARNINGS=OFF -DCLANG_TIDY=OFF
        cmake --build build
        sudo cmake --install build
        cd -

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCLANG_FORMAT=OFF -DCOMPILER_WARNINGS=OFF -DENABLE_TEST=OFF

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

#    - name: Test
#      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}
      
